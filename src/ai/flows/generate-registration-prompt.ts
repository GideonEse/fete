// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview A registration prompt generator AI agent.
 *
 * - generateRegistrationPrompt - A function that handles the prompt generation process.
 * - GenerateRegistrationPromptInput - The input type for the generateRegistrationPrompt function.
 * - GenerateRegistrationPromptOutput - The return type for the generateRegistrationPrompt function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GenerateRegistrationPromptInputSchema = z.object({
  memberType: z.string().describe("The type of the church member (e.g., 'Student', 'Staff')."),
});
export type GenerateRegistrationPromptInput = z.infer<typeof GenerateRegistrationPromptInputSchema>;

const GenerateRegistrationPromptOutputSchema = z.object({
  registrationPrompt: z.string().describe('The generated registration prompt for the church member.'),
});
export type GenerateRegistrationPromptOutput = z.infer<typeof GenerateRegistrationPromptOutputSchema>;

export async function generateRegistrationPrompt(input: GenerateRegistrationPromptInput): Promise<GenerateRegistrationPromptOutput> {
  return generateRegistrationPromptFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generateRegistrationPromptPrompt',
  input: {schema: GenerateRegistrationPromptInputSchema},
  output: {schema: GenerateRegistrationPromptOutputSchema},
  prompt: `You are an expert at generating registration prompts for church members based on their type.\n\nGenerate a registration prompt for the following church member type:\n\nType: {{{memberType}}}`,
});

const generateRegistrationPromptFlow = ai.defineFlow(
  {
    name: 'generateRegistrationPromptFlow',
    inputSchema: GenerateRegistrationPromptInputSchema,
    outputSchema: GenerateRegistrationPromptOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
